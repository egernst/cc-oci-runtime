#!/bin/bash

source ./run_docker_metrics.dat
RESULT_DIR="./results"

if [ ! -d "$RESULT_DIR" ]; then
	mkdir "$RESULT_DIR"
fi

IN_FILES=(workload_time/cor_create_time.sh.in)

#generate files if they do not exist
for inf in ${IN_FILES[@]}; do
	outf="`dirname \"${inf}\"`/`basename -s '.in' \"${inf}\"`"
	if [ ! -f "${outf}" ]; then
		PACKAGE_NAME=cc-oci-runtime \
		../../data/genfile.sh "${inf}" "${outf}"
		chmod +x "${outf}"
	fi
done

# complete workload : docker run --runtime $runtime -tid $image $cmd
bash workload_time/docker_workload_time.sh true ubuntu runc "$TIMES"
bash workload_time/docker_workload_time.sh true ubuntu cor "$TIMES"
bash workload_time/docker_workload_time_stress.sh true clearlinux cor
bash workload_time/docker_workload_time_stress.sh true clearlinux runc

# time that cc-oci-run-time takes to create a container:
bash workload_time/cor_create_time.sh "$TIMES"

# time to stop container using docker: docker stop $container_id
bash workload_time/docker_shutdown.sh runc "$TIMES"
bash workload_time/docker_shutdown.sh cor "$TIMES"

# density (CPU and Memory)
bash density/docker_cpu_usage.sh "$TIMES" "$CPU_WAIT_TIME"
bash density/docker_memory_usage.sh "$MEM_CONTAINERS" "$MEM_WAIT_TIME"

# kernel boot time
bash workload_time/kernel_boot_time.sh $TIMES
bash workload_time/kernel_boot_time_stress.sh
